2020-05-13 14:51:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CARRE" non trouvée
Table "CARRE" not found; SQL statement:
DROP TABLE Carre [42102-199]
2020-05-13 14:56:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La table "CARRE" existe déjà
Table "CARRE" already exists; SQL statement:
CREATE TABLE Carre( nom varchar(50) PRIMARY KEY NOT NULL, x double, y double, cote double) [42101-199]
2020-05-13 15:53:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "cote" non trouvée
Column "cote" not found [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3188)
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3287)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:314)
	at org.example.CercleDAO.find(CercleDAO.java:33)
	at org.example.CercleDAOTest.find(CercleDAOTest.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2020-05-13 16:14:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "RECATANGLE" non trouvée
Table "RECATANGLE" not found; SQL statement:
DELETE FROM Recatangle R WHERE R.Nom = ? [42102-199]
2020-05-13 17:04:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Duplication du nom de colonnes "X1"
Duplicate column name "X1"; SQL statement:
UPDATE Rectangle SET x1= ? , y1= ? , x1= ? , y1= ?  WHERE Nom= ? [42121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.dml.Update.setAssignment(Update.java:81)
	at org.h2.command.Parser.parseUpdateSetClause(Parser.java:1254)
	at org.h2.command.Parser.parseUpdate(Parser.java:1223)
	at org.h2.command.Parser.parsePrepared(Parser.java:943)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at org.example.RectangleDAO.update(RectangleDAO.java:50)
	at org.example.RectangleDAOTest.update(RectangleDAOTest.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2020-05-13 17:14:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "X3" non trouvée
Column "X3" not found; SQL statement:
UPDATE Rectangle SET x1= ? , y1= ? , x2= ? , y2= ?, x3= ? , y3= ?  WHERE Nom= ? [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.readTableColumn(Parser.java:1214)
	at org.h2.command.Parser.parseUpdateSetClause(Parser.java:1252)
	at org.h2.command.Parser.parseUpdate(Parser.java:1223)
	at org.h2.command.Parser.parsePrepared(Parser.java:943)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at org.example.TriangleDAO.update(TriangleDAO.java:51)
	at org.example.TriangleDAOTest.update(TriangleDAOTest.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2020-05-14 16:42:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPOSITEFORME" non trouvée
Table "COMPOSITEFORME" not found; SQL statement:
INSERT INTO CompositeForme(Nom,objNom,type,dessin) values(?, ?, ?) [42102-199]
2020-05-14 16:46:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "OBJNOM" non trouvée
Column "OBJNOM" not found; SQL statement:
INSERT INTO CompositeForme(Nom,objNom,type,dessin) values(?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at org.example.CompositeFormeDAO.create(CompositeFormeDAO.java:15)
	at org.example.CompositeFormeDAO.create(CompositeFormeDAO.java:8)
	at org.example.CommandeSave.execute(CommandeSave.java:25)
	at org.example.DrawingApp.run(DrawingApp.java:57)
	at org.example.DrawingApp.main(DrawingApp.java:65)
2020-05-14 16:47:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La table "COMPOSITEFORME" existe déjà
Table "COMPOSITEFORME" already exists; SQL statement:
CREATE TABLE CompositeForme( Nom varchar(50) PRIMARY KEY NOT NULL, objNom varchar(50), type varchar(50), dessin integer) [42101-199]
2020-05-14 16:47:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CARRE" non trouvée
Table "CARRE" not found; SQL statement:
DROP TABLE Carre [42102-199]
2020-05-14 16:48:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CARRE" non trouvée
Table "CARRE" not found; SQL statement:
DROP TABLE Carre [42102-199]
2020-05-14 16:52:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: La paramètre "#4" n'est pas initialisé
Parameter "#4" is not set; SQL statement:
INSERT INTO CompositeForme(Nom,objNom,type,dessin) values(?, ?, ?, ?) [90012-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:587)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.Parameter.checkSet(Parameter.java:94)
	at org.h2.command.Prepared.checkParameters(Prepared.java:180)
	at org.h2.command.CommandContainer.update(CommandContainer.java:132)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:200)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:154)
	at org.example.CompositeFormeDAO.create(CompositeFormeDAO.java:37)
	at org.example.CompositeFormeDAO.create(CompositeFormeDAO.java:8)
	at org.example.CommandeSave.execute(CommandeSave.java:25)
	at org.example.DrawingApp.run(DrawingApp.java:58)
	at org.example.DrawingApp.main(DrawingApp.java:66)
2020-05-14 16:54:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La table "COMPOSITEFORME" existe déjà
Table "COMPOSITEFORME" already exists; SQL statement:
CREATE TABLE CompositeForme( Nom varchar(50) PRIMARY KEY NOT NULL, objNom varchar(50), type varchar(50), dessin integer) [42101-199]
2020-05-14 18:24:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPOSITEFORM" non trouvée
Table "COMPOSITEFORM" not found; SQL statement:
DELETE FROM CompositeForm C WHERE C.dessin = ? [42102-199]
2020-05-23 22:12:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE IF[*] NOT EXISTS TABLE COMPOSITEFORME( NOM VARCHAR(50) , OBJNOM VARCHAR(50), TYPE VARCHAR(50), DESSIN INTEGER) "; attendu "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE IF[*] NOT EXISTS TABLE COMPOSITEFORME( NOM VARCHAR(50) , OBJNOM VARCHAR(50), TYPE VARCHAR(50), DESSIN INTEGER) "; expected "OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX"; SQL statement:
CREATE IF NOT EXISTS TABLE CompositeForme( Nom varchar(50) , objNom varchar(50), type varchar(50), dessin integer) [42001-199]
